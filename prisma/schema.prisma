datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// enum bayType {
//   MALE_1
//   MALE_2
//   FEMALE_1
//   FEMALE_2
// }
enum bayType {
  MALE
  FEMALE
}


enum ticketStatus {
  BLOCKED
  PURCHASED
  CANCELED
}

enum gender {
  MALE
  FEMALE
}

enum seating {
  SEATING
}

enum transactionStatus {
  COMPLETED
  PROCESSED
  CANCELED
}

generator client {
  provider = "prisma-client-js"
}

model User {
  user_id       Int           @id @default(autoincrement())
  email         String        @unique
  gender        gender
  name          String
  contactNumber String
  seating       seating
  transportNeed Boolean
  bay_id        Int?
  Bay           Bay?          @relation(fields: [bay_id], references: [bay_id])
  Tickets       Ticket[]
  Transaction   Transaction[]
}

model Bay {
  bay_id           Int      @id @default(autoincrement())
  total_count      Int
  available        Int
  amount_of_ticket Float
  bay_name         bayType
  Tickets          Ticket[]
  User             User[]
}

model Ticket {
  ticket_id      Int          @id @default(autoincrement())
  ticket_status  ticketStatus
  date           DateTime
  user_id        Int
  bay_id         Int
  transaction_id String

  User        User         @relation(fields: [user_id], references: [user_id])
  Bay         Bay          @relation(fields: [bay_id], references: [bay_id])
  Transaction Transaction? @relation(fields: [transaction_id], references: [transaction_id]) // Correct reference
}

model Transaction {
  transaction_id     String            @id
  transaction_status transactionStatus
  transaction_amount Float
  mode               String
  date               DateTime
  user               User              @relation(fields: [userId], references: [user_id])
  userId             Int
  Tickets            Ticket[]
}

model Session {
  id     Int      @id @default(autoincrement())
  sid    String   @unique
  sess   Json?
  expire DateTime
}
